<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elangzhi.fish.dao.PersonMapper" >
  <resultMap id="BaseResultMap" type="com.elangzhi.fish.model.Person" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="DOUBLE" />
    <result column="game_id" property="gameId" jdbcType="BIGINT" />
    <result column="room_id" property="roomId" jdbcType="BIGINT" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `name`, `type`, `number`, weight, game_id, room_id, intro
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from person
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.elangzhi.fish.model.Person" >
    insert into person (id, `name`, `type`, 
      `number`, weight, game_id, 
      room_id, intro)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{weight,jdbcType=DOUBLE}, #{gameId,jdbcType=BIGINT}, 
      #{roomId,jdbcType=BIGINT}, #{intro,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.elangzhi.fish.model.Person" >
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="number != null" >
        `number`,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="gameId != null" >
        game_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="intro != null" >
        intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="gameId != null" >
        #{gameId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elangzhi.fish.model.Person" >
    update person
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="gameId != null" >
        game_id = #{gameId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=BIGINT},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elangzhi.fish.model.Person" >
    update person
    set `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      `number` = #{number,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
      game_id = #{gameId,jdbcType=BIGINT},
      room_id = #{roomId,jdbcType=BIGINT},
      intro = #{intro,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="list" resultMap="BaseResultMap">
    select a.*,b.`name` roomName
    from person a
    left join room b on a.room_id = b.id
    where 1 = 1

    <if test="type != null" >
      and a.`type` = #{type,jdbcType=INTEGER}
    </if>

    <if test="gameId != null" >
      and a.`game_id` = #{gameId,jdbcType=BIGINT}
    </if>
  </select>
</mapper>